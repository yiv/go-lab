// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Frame struct {
	Payload              []byte   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Frame) Reset()         { *m = Frame{} }
func (m *Frame) String() string { return proto.CompactTextString(m) }
func (*Frame) ProtoMessage()    {}
func (*Frame) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}

func (m *Frame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Frame.Unmarshal(m, b)
}
func (m *Frame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Frame.Marshal(b, m, deterministic)
}
func (m *Frame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Frame.Merge(m, src)
}
func (m *Frame) XXX_Size() int {
	return xxx_messageInfo_Frame.Size(m)
}
func (m *Frame) XXX_DiscardUnknown() {
	xxx_messageInfo_Frame.DiscardUnknown(m)
}

var xxx_messageInfo_Frame proto.InternalMessageInfo

func (m *Frame) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type UpdateNetReq struct {
	Delay                int32    `protobuf:"varint,1,opt,name=delay,proto3" json:"delay,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateNetReq) Reset()         { *m = UpdateNetReq{} }
func (m *UpdateNetReq) String() string { return proto.CompactTextString(m) }
func (*UpdateNetReq) ProtoMessage()    {}
func (*UpdateNetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}

func (m *UpdateNetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNetReq.Unmarshal(m, b)
}
func (m *UpdateNetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNetReq.Marshal(b, m, deterministic)
}
func (m *UpdateNetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNetReq.Merge(m, src)
}
func (m *UpdateNetReq) XXX_Size() int {
	return xxx_messageInfo_UpdateNetReq.Size(m)
}
func (m *UpdateNetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNetReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNetReq proto.InternalMessageInfo

func (m *UpdateNetReq) GetDelay() int32 {
	if m != nil {
		return m.Delay
	}
	return 0
}

type UpdateNetRes struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateNetRes) Reset()         { *m = UpdateNetRes{} }
func (m *UpdateNetRes) String() string { return proto.CompactTextString(m) }
func (*UpdateNetRes) ProtoMessage()    {}
func (*UpdateNetRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{2}
}

func (m *UpdateNetRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNetRes.Unmarshal(m, b)
}
func (m *UpdateNetRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNetRes.Marshal(b, m, deterministic)
}
func (m *UpdateNetRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNetRes.Merge(m, src)
}
func (m *UpdateNetRes) XXX_Size() int {
	return xxx_messageInfo_UpdateNetRes.Size(m)
}
func (m *UpdateNetRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNetRes.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNetRes proto.InternalMessageInfo

func (m *UpdateNetRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func init() {
	proto.RegisterType((*Frame)(nil), "pb.Frame")
	proto.RegisterType((*UpdateNetReq)(nil), "pb.UpdateNetReq")
	proto.RegisterType((*UpdateNetRes)(nil), "pb.UpdateNetRes")
}

func init() { proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7) }

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 157 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0x2d, 0x2a,
	0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x52, 0xe4, 0x62,
	0x75, 0x2b, 0x4a, 0xcc, 0x4d, 0x15, 0x92, 0xe0, 0x62, 0x2f, 0x48, 0xac, 0xcc, 0xc9, 0x4f, 0x4c,
	0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x09, 0x82, 0x71, 0x95, 0x54, 0xb8, 0x78, 0x42, 0x0b, 0x52,
	0x12, 0x4b, 0x52, 0xfd, 0x52, 0x4b, 0x82, 0x52, 0x0b, 0x85, 0x44, 0xb8, 0x58, 0x53, 0x52, 0x73,
	0x12, 0x2b, 0xc1, 0xea, 0x58, 0x83, 0x20, 0x1c, 0x25, 0x25, 0x14, 0x55, 0xc5, 0x42, 0x42, 0x5c,
	0x2c, 0xc9, 0xf9, 0x29, 0xa9, 0x50, 0x45, 0x60, 0xb6, 0x91, 0x0e, 0x17, 0x8b, 0x3b, 0xc8, 0x2e,
	0x15, 0x2e, 0xb6, 0xe0, 0x92, 0xa2, 0xd4, 0xc4, 0x5c, 0x21, 0x4e, 0xbd, 0x82, 0x24, 0x3d, 0xb0,
	0x03, 0xa4, 0x10, 0x4c, 0x25, 0x06, 0x0d, 0x46, 0x03, 0xc6, 0x24, 0x36, 0xb0, 0x2b, 0x8d, 0x01,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x04, 0xbb, 0xda, 0xa6, 0xb5, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GameClient is the client API for Game service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GameClient interface {
	Stream(ctx context.Context, opts ...grpc.CallOption) (Game_StreamClient, error)
}

type gameClient struct {
	cc *grpc.ClientConn
}

func NewGameClient(cc *grpc.ClientConn) GameClient {
	return &gameClient{cc}
}

func (c *gameClient) Stream(ctx context.Context, opts ...grpc.CallOption) (Game_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Game_serviceDesc.Streams[0], "/pb.Game/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &gameStreamClient{stream}
	return x, nil
}

type Game_StreamClient interface {
	Send(*Frame) error
	Recv() (*Frame, error)
	grpc.ClientStream
}

type gameStreamClient struct {
	grpc.ClientStream
}

func (x *gameStreamClient) Send(m *Frame) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gameStreamClient) Recv() (*Frame, error) {
	m := new(Frame)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GameServer is the server API for Game service.
type GameServer interface {
	Stream(Game_StreamServer) error
}

func RegisterGameServer(s *grpc.Server, srv GameServer) {
	s.RegisterService(&_Game_serviceDesc, srv)
}

func _Game_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GameServer).Stream(&gameStreamServer{stream})
}

type Game_StreamServer interface {
	Send(*Frame) error
	Recv() (*Frame, error)
	grpc.ServerStream
}

type gameStreamServer struct {
	grpc.ServerStream
}

func (x *gameStreamServer) Send(m *Frame) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gameStreamServer) Recv() (*Frame, error) {
	m := new(Frame)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Game_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Game",
	HandlerType: (*GameServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _Game_Stream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "server.proto",
}
