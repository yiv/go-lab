// Code generated by protoc-gen-go. DO NOT EDIT.
// source: game.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	game.proto

It has these top-level messages:
	Frame
	EnterTableReq
	SitdownReq
	BetReq
	DuelReq
	ErrRes
	Player
	PlayerID
	Table
	Cards
	PlayerSeat
	Seat
	Duel
	Bet
	DuelResult
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 双向流包
type Frame struct {
	Payload []byte `protobuf:"bytes,1,opt,name=Payload,proto3" json:"Payload,omitempty"`
}

func (m *Frame) Reset()                    { *m = Frame{} }
func (m *Frame) String() string            { return proto.CompactTextString(m) }
func (*Frame) ProtoMessage()               {}
func (*Frame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Frame) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

// 双向流请求包
type EnterTableReq struct {
	Token     string `protobuf:"bytes,1,opt,name=Token" json:"Token,omitempty"`
	RoomClass int32  `protobuf:"varint,2,opt,name=RoomClass" json:"RoomClass,omitempty"`
}

func (m *EnterTableReq) Reset()                    { *m = EnterTableReq{} }
func (m *EnterTableReq) String() string            { return proto.CompactTextString(m) }
func (*EnterTableReq) ProtoMessage()               {}
func (*EnterTableReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *EnterTableReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *EnterTableReq) GetRoomClass() int32 {
	if m != nil {
		return m.RoomClass
	}
	return 0
}

type SitdownReq struct {
	Seat int32 `protobuf:"varint,1,opt,name=Seat" json:"Seat,omitempty"`
}

func (m *SitdownReq) Reset()                    { *m = SitdownReq{} }
func (m *SitdownReq) String() string            { return proto.CompactTextString(m) }
func (*SitdownReq) ProtoMessage()               {}
func (*SitdownReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SitdownReq) GetSeat() int32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

type BetReq struct {
	Coins int64 `protobuf:"varint,1,opt,name=Coins" json:"Coins,omitempty"`
}

func (m *BetReq) Reset()                    { *m = BetReq{} }
func (m *BetReq) String() string            { return proto.CompactTextString(m) }
func (*BetReq) ProtoMessage()               {}
func (*BetReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BetReq) GetCoins() int64 {
	if m != nil {
		return m.Coins
	}
	return 0
}

type DuelReq struct {
	Rival int64 `protobuf:"varint,1,opt,name=Rival" json:"Rival,omitempty"`
}

func (m *DuelReq) Reset()                    { *m = DuelReq{} }
func (m *DuelReq) String() string            { return proto.CompactTextString(m) }
func (*DuelReq) ProtoMessage()               {}
func (*DuelReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DuelReq) GetRival() int64 {
	if m != nil {
		return m.Rival
	}
	return 0
}

// 双向流返回包
type ErrRes struct {
	Err int32 `protobuf:"varint,1,opt,name=Err" json:"Err,omitempty"`
}

func (m *ErrRes) Reset()                    { *m = ErrRes{} }
func (m *ErrRes) String() string            { return proto.CompactTextString(m) }
func (*ErrRes) ProtoMessage()               {}
func (*ErrRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ErrRes) GetErr() int32 {
	if m != nil {
		return m.Err
	}
	return 0
}

type Player struct {
	Id       int64  `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	SeatCode int32  `protobuf:"varint,2,opt,name=SeatCode" json:"SeatCode,omitempty"`
	Blind    bool   `protobuf:"varint,3,opt,name=Blind" json:"Blind,omitempty"`
	Seat     int32  `protobuf:"varint,4,opt,name=Seat" json:"Seat,omitempty"`
	Coin     int64  `protobuf:"varint,5,opt,name=Coin" json:"Coin,omitempty"`
	Nick     string `protobuf:"bytes,6,opt,name=Nick" json:"Nick,omitempty"`
	Avatar   string `protobuf:"bytes,7,opt,name=Avatar" json:"Avatar,omitempty"`
	Cards    []byte `protobuf:"bytes,8,opt,name=Cards,proto3" json:"Cards,omitempty"`
}

func (m *Player) Reset()                    { *m = Player{} }
func (m *Player) String() string            { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()               {}
func (*Player) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Player) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Player) GetSeatCode() int32 {
	if m != nil {
		return m.SeatCode
	}
	return 0
}

func (m *Player) GetBlind() bool {
	if m != nil {
		return m.Blind
	}
	return false
}

func (m *Player) GetSeat() int32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *Player) GetCoin() int64 {
	if m != nil {
		return m.Coin
	}
	return 0
}

func (m *Player) GetNick() string {
	if m != nil {
		return m.Nick
	}
	return ""
}

func (m *Player) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *Player) GetCards() []byte {
	if m != nil {
		return m.Cards
	}
	return nil
}

type PlayerID struct {
	Id int64 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
}

func (m *PlayerID) Reset()                    { *m = PlayerID{} }
func (m *PlayerID) String() string            { return proto.CompactTextString(m) }
func (*PlayerID) ProtoMessage()               {}
func (*PlayerID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *PlayerID) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Table struct {
	TableId    int32     `protobuf:"varint,1,opt,name=TableId" json:"TableId,omitempty"`
	CallSeat   int32     `protobuf:"varint,2,opt,name=CallSeat" json:"CallSeat,omitempty"`
	BankerSeat int32     `protobuf:"varint,3,opt,name=BankerSeat" json:"BankerSeat,omitempty"`
	Jackpot    int64     `protobuf:"varint,4,opt,name=Jackpot" json:"Jackpot,omitempty"`
	Round      int32     `protobuf:"varint,5,opt,name=Round" json:"Round,omitempty"`
	RoundBet   int64     `protobuf:"varint,6,opt,name=RoundBet" json:"RoundBet,omitempty"`
	Status     int32     `protobuf:"varint,7,opt,name=Status" json:"Status,omitempty"`
	Players    []*Player `protobuf:"bytes,8,rep,name=players" json:"players,omitempty"`
}

func (m *Table) Reset()                    { *m = Table{} }
func (m *Table) String() string            { return proto.CompactTextString(m) }
func (*Table) ProtoMessage()               {}
func (*Table) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Table) GetTableId() int32 {
	if m != nil {
		return m.TableId
	}
	return 0
}

func (m *Table) GetCallSeat() int32 {
	if m != nil {
		return m.CallSeat
	}
	return 0
}

func (m *Table) GetBankerSeat() int32 {
	if m != nil {
		return m.BankerSeat
	}
	return 0
}

func (m *Table) GetJackpot() int64 {
	if m != nil {
		return m.Jackpot
	}
	return 0
}

func (m *Table) GetRound() int32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *Table) GetRoundBet() int64 {
	if m != nil {
		return m.RoundBet
	}
	return 0
}

func (m *Table) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Table) GetPlayers() []*Player {
	if m != nil {
		return m.Players
	}
	return nil
}

type Cards struct {
	Cards []byte `protobuf:"bytes,1,opt,name=Cards,proto3" json:"Cards,omitempty"`
}

func (m *Cards) Reset()                    { *m = Cards{} }
func (m *Cards) String() string            { return proto.CompactTextString(m) }
func (*Cards) ProtoMessage()               {}
func (*Cards) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Cards) GetCards() []byte {
	if m != nil {
		return m.Cards
	}
	return nil
}

type PlayerSeat struct {
	Id   int64 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Seat int32 `protobuf:"varint,2,opt,name=Seat" json:"Seat,omitempty"`
}

func (m *PlayerSeat) Reset()                    { *m = PlayerSeat{} }
func (m *PlayerSeat) String() string            { return proto.CompactTextString(m) }
func (*PlayerSeat) ProtoMessage()               {}
func (*PlayerSeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *PlayerSeat) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PlayerSeat) GetSeat() int32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

type Seat struct {
	Seat int32 `protobuf:"varint,1,opt,name=Seat" json:"Seat,omitempty"`
}

func (m *Seat) Reset()                    { *m = Seat{} }
func (m *Seat) String() string            { return proto.CompactTextString(m) }
func (*Seat) ProtoMessage()               {}
func (*Seat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *Seat) GetSeat() int32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

type Duel struct {
	FromSeat int32 `protobuf:"varint,1,opt,name=FromSeat" json:"FromSeat,omitempty"`
	ToSeat   int32 `protobuf:"varint,2,opt,name=ToSeat" json:"ToSeat,omitempty"`
}

func (m *Duel) Reset()                    { *m = Duel{} }
func (m *Duel) String() string            { return proto.CompactTextString(m) }
func (*Duel) ProtoMessage()               {}
func (*Duel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Duel) GetFromSeat() int32 {
	if m != nil {
		return m.FromSeat
	}
	return 0
}

func (m *Duel) GetToSeat() int32 {
	if m != nil {
		return m.ToSeat
	}
	return 0
}

type Bet struct {
	Seat  int32 `protobuf:"varint,1,opt,name=Seat" json:"Seat,omitempty"`
	Coins int64 `protobuf:"varint,2,opt,name=Coins" json:"Coins,omitempty"`
}

func (m *Bet) Reset()                    { *m = Bet{} }
func (m *Bet) String() string            { return proto.CompactTextString(m) }
func (*Bet) ProtoMessage()               {}
func (*Bet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *Bet) GetSeat() int32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *Bet) GetCoins() int64 {
	if m != nil {
		return m.Coins
	}
	return 0
}

type DuelResult struct {
	FromSeat int32 `protobuf:"varint,1,opt,name=FromSeat" json:"FromSeat,omitempty"`
	ToSeat   int32 `protobuf:"varint,2,opt,name=ToSeat" json:"ToSeat,omitempty"`
	WinSeat  int32 `protobuf:"varint,3,opt,name=WinSeat" json:"WinSeat,omitempty"`
}

func (m *DuelResult) Reset()                    { *m = DuelResult{} }
func (m *DuelResult) String() string            { return proto.CompactTextString(m) }
func (*DuelResult) ProtoMessage()               {}
func (*DuelResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *DuelResult) GetFromSeat() int32 {
	if m != nil {
		return m.FromSeat
	}
	return 0
}

func (m *DuelResult) GetToSeat() int32 {
	if m != nil {
		return m.ToSeat
	}
	return 0
}

func (m *DuelResult) GetWinSeat() int32 {
	if m != nil {
		return m.WinSeat
	}
	return 0
}

func init() {
	proto.RegisterType((*Frame)(nil), "pb.Frame")
	proto.RegisterType((*EnterTableReq)(nil), "pb.EnterTableReq")
	proto.RegisterType((*SitdownReq)(nil), "pb.SitdownReq")
	proto.RegisterType((*BetReq)(nil), "pb.BetReq")
	proto.RegisterType((*DuelReq)(nil), "pb.DuelReq")
	proto.RegisterType((*ErrRes)(nil), "pb.ErrRes")
	proto.RegisterType((*Player)(nil), "pb.Player")
	proto.RegisterType((*PlayerID)(nil), "pb.PlayerID")
	proto.RegisterType((*Table)(nil), "pb.Table")
	proto.RegisterType((*Cards)(nil), "pb.Cards")
	proto.RegisterType((*PlayerSeat)(nil), "pb.PlayerSeat")
	proto.RegisterType((*Seat)(nil), "pb.Seat")
	proto.RegisterType((*Duel)(nil), "pb.Duel")
	proto.RegisterType((*Bet)(nil), "pb.Bet")
	proto.RegisterType((*DuelResult)(nil), "pb.DuelResult")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GameService service

type GameServiceClient interface {
	Stream(ctx context.Context, opts ...grpc.CallOption) (GameService_StreamClient, error)
}

type gameServiceClient struct {
	cc *grpc.ClientConn
}

func NewGameServiceClient(cc *grpc.ClientConn) GameServiceClient {
	return &gameServiceClient{cc}
}

func (c *gameServiceClient) Stream(ctx context.Context, opts ...grpc.CallOption) (GameService_StreamClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_GameService_serviceDesc.Streams[0], c.cc, "/pb.GameService/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &gameServiceStreamClient{stream}
	return x, nil
}

type GameService_StreamClient interface {
	Send(*Frame) error
	Recv() (*Frame, error)
	grpc.ClientStream
}

type gameServiceStreamClient struct {
	grpc.ClientStream
}

func (x *gameServiceStreamClient) Send(m *Frame) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gameServiceStreamClient) Recv() (*Frame, error) {
	m := new(Frame)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for GameService service

type GameServiceServer interface {
	Stream(GameService_StreamServer) error
}

func RegisterGameServiceServer(s *grpc.Server, srv GameServiceServer) {
	s.RegisterService(&_GameService_serviceDesc, srv)
}

func _GameService_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GameServiceServer).Stream(&gameServiceStreamServer{stream})
}

type GameService_StreamServer interface {
	Send(*Frame) error
	Recv() (*Frame, error)
	grpc.ServerStream
}

type gameServiceStreamServer struct {
	grpc.ServerStream
}

func (x *gameServiceStreamServer) Send(m *Frame) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gameServiceStreamServer) Recv() (*Frame, error) {
	m := new(Frame)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _GameService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.GameService",
	HandlerType: (*GameServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _GameService_Stream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "game.proto",
}

func init() { proto.RegisterFile("game.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 522 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x86, 0x95, 0xa4, 0x49, 0xdb, 0x59, 0x40, 0xc8, 0x42, 0x28, 0xaa, 0x60, 0x29, 0x16, 0x87,
	0x9e, 0xca, 0xb2, 0xdc, 0xb8, 0xd1, 0x6e, 0x17, 0x95, 0x03, 0x5a, 0xb9, 0x95, 0x90, 0xb8, 0xb9,
	0x8d, 0x85, 0xa2, 0x3a, 0x71, 0x71, 0xdc, 0xa2, 0x7d, 0x2f, 0xde, 0x89, 0xd7, 0x40, 0x33, 0x76,
	0xda, 0x68, 0xe1, 0xc4, 0x6d, 0xbe, 0x19, 0x67, 0x66, 0xfe, 0x99, 0x69, 0x01, 0xbe, 0xcb, 0x4a,
	0x4d, 0xf7, 0xd6, 0x38, 0xc3, 0xe2, 0xfd, 0x86, 0xbf, 0x86, 0xf4, 0xd6, 0xca, 0x4a, 0xb1, 0x1c,
	0xfa, 0x77, 0xf2, 0x5e, 0x1b, 0x59, 0xe4, 0xd1, 0x38, 0x9a, 0x3c, 0x12, 0x2d, 0xf2, 0x39, 0x3c,
	0x5e, 0xd4, 0x4e, 0xd9, 0xb5, 0xdc, 0x68, 0x25, 0xd4, 0x0f, 0xf6, 0x0c, 0xd2, 0xb5, 0xd9, 0xa9,
	0x9a, 0x1e, 0x0e, 0x85, 0x07, 0xf6, 0x02, 0x86, 0xc2, 0x98, 0x6a, 0xae, 0x65, 0xd3, 0xe4, 0xf1,
	0x38, 0x9a, 0xa4, 0xe2, 0xec, 0xe0, 0x63, 0x80, 0x55, 0xe9, 0x0a, 0xf3, 0xb3, 0xc6, 0x0c, 0x0c,
	0x7a, 0x2b, 0x25, 0x1d, 0x25, 0x48, 0x05, 0xd9, 0xfc, 0x12, 0xb2, 0x99, 0x72, 0x21, 0xff, 0xdc,
	0x94, 0x75, 0x43, 0xe1, 0x44, 0x78, 0xe0, 0xaf, 0xa0, 0x7f, 0x73, 0x50, 0x3a, 0x3c, 0x10, 0xe5,
	0x51, 0xea, 0xf6, 0x01, 0x01, 0x1f, 0x41, 0xb6, 0xb0, 0x56, 0xa8, 0x86, 0x3d, 0x85, 0x64, 0x61,
	0x6d, 0xc8, 0x8e, 0x26, 0xff, 0x15, 0x41, 0x76, 0xa7, 0xe5, 0xbd, 0xb2, 0xec, 0x09, 0xc4, 0xcb,
	0x22, 0x7c, 0x19, 0x2f, 0x0b, 0x36, 0x82, 0x01, 0xd6, 0x9f, 0x9b, 0x42, 0x85, 0xb6, 0x4f, 0x8c,
	0x85, 0x66, 0xba, 0xac, 0x8b, 0x3c, 0x19, 0x47, 0x93, 0x81, 0xf0, 0x70, 0xea, 0xbe, 0x77, 0xee,
	0x1e, 0x7d, 0xd8, 0x66, 0x9e, 0x52, 0x5e, 0xb2, 0xd1, 0xf7, 0xa5, 0xdc, 0xee, 0xf2, 0x8c, 0xc6,
	0x44, 0x36, 0x7b, 0x0e, 0xd9, 0xc7, 0xa3, 0x74, 0xd2, 0xe6, 0x7d, 0xf2, 0x06, 0x22, 0xcd, 0xd2,
	0x16, 0x4d, 0x3e, 0xa0, 0xe1, 0x7b, 0xe0, 0x23, 0x18, 0xf8, 0xae, 0x97, 0x37, 0x0f, 0xfb, 0xe6,
	0xbf, 0x23, 0x48, 0x69, 0x25, 0xb8, 0x3a, 0x32, 0x42, 0x38, 0x15, 0x2d, 0xa2, 0xb6, 0xb9, 0xd4,
	0x9a, 0xba, 0x0d, 0xda, 0x5a, 0x66, 0x97, 0x00, 0x33, 0x59, 0xef, 0x94, 0xa5, 0x68, 0x42, 0xd1,
	0x8e, 0x07, 0xb3, 0x7e, 0x96, 0xdb, 0xdd, 0xde, 0x78, 0xa1, 0x89, 0x68, 0x91, 0xc6, 0x6f, 0x0e,
	0x75, 0x41, 0x62, 0x53, 0xe1, 0x01, 0x6b, 0x91, 0x31, 0x53, 0x8e, 0x14, 0x27, 0xe2, 0xc4, 0xa8,
	0x7a, 0xe5, 0xa4, 0x3b, 0x34, 0xa4, 0x3a, 0x15, 0x81, 0xd8, 0x1b, 0xe8, 0xef, 0x49, 0x1f, 0xea,
	0x4e, 0x26, 0x17, 0xd7, 0x30, 0xdd, 0x6f, 0xa6, 0x5e, 0xb2, 0x68, 0x43, 0xfc, 0x65, 0x98, 0xcd,
	0x79, 0x48, 0x51, 0x77, 0x48, 0x57, 0x00, 0xfe, 0x0b, 0x6a, 0xfb, 0xe1, 0x7a, 0xdb, 0x65, 0xc5,
	0x9d, 0x53, 0x1b, 0xc1, 0x69, 0x69, 0x7f, 0x9d, 0xe1, 0x07, 0xe8, 0xe1, 0x99, 0xa1, 0x9c, 0x5b,
	0x6b, 0xaa, 0x4e, 0xfc, 0xc4, 0x28, 0x67, 0x6d, 0x3a, 0x59, 0x03, 0xf1, 0xb7, 0x90, 0xa0, 0xda,
	0x7f, 0xa4, 0x3d, 0xdf, 0x74, 0xdc, 0xbd, 0xe9, 0x6f, 0x00, 0xfe, 0xa6, 0x9b, 0x83, 0x76, 0xff,
	0x53, 0x12, 0xb7, 0xf4, 0xb5, 0xac, 0x3b, 0x2b, 0x6c, 0xf1, 0xfa, 0x1d, 0x5c, 0x7c, 0x92, 0x95,
	0x5a, 0x29, 0x7b, 0x2c, 0xb7, 0x8a, 0x71, 0x5c, 0x81, 0x55, 0xb2, 0x62, 0x43, 0x9c, 0x31, 0xfd,
	0xe8, 0x47, 0x67, 0x73, 0x12, 0x5d, 0x45, 0x9b, 0x8c, 0xfe, 0x17, 0xde, 0xff, 0x09, 0x00, 0x00,
	0xff, 0xff, 0x4a, 0x78, 0xbe, 0x87, 0x25, 0x04, 0x00, 0x00,
}
